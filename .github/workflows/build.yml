name: Build minimal Chromium for Armbian (ARMhf)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git ninja-build clang lld \
                                  build-essential pkg-config curl xz-utils zip \
                                  libssl-dev

      - name: Install Rust toolchain
        run: |
          # Install Rustup
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          
          # Add ARMv7 target (for ARMhf)
          rustup target add armv7-unknown-linux-gnueabihf
          
          # Verify installation
          rustc --version
          cargo --version

      - name: Cache download_cache
        uses: actions/cache@v4
        with:
          path: build/download_cache
          key: dcache-${{ hashFiles('downloads.ini') }}

      - name: Retrieve and unpack Chromium source
        run: |
          mkdir -p build/download_cache
          python3 ./utils/downloads.py retrieve -c build/download_cache -i downloads.ini
          python3 ./utils/downloads.py unpack   -c build/download_cache -i downloads.ini -- build/src

      - name: Prune binaries
        run: |
          python3 ./utils/prune_binaries.py build/src pruning.list

      - name: Apply patches
        run: |
          python3 ./utils/patches.py apply build/src patches

      - name: Domain substitution
        run: |
          python3 ./utils/domain_substitution.py apply \
            -r domain_regex.list -f domain_substitution.list \
            -c build/domsubcache.tar.gz build/src

      - name: Install ARM sysroot
        run: |
          python3 build/src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm

      - name: Bootstrap GN
        run: |
          mkdir -p build/src/out/Default
          python3 build/src/tools/gn/bootstrap/bootstrap.py \
            --skip-generate-buildfiles -j$(nproc) -o build/src/out/Default/

      - name: Write args.gn (ARMhf minimal)
        run: |
          cat > build/src/out/Default/args.gn <<'GN'
          is_debug = false
          is_official_build = true

          target_os = "linux"
          target_cpu = "arm"
          arm_version = 7
          use_sysroot = true

          is_component_build = false
          symbol_level = 0
          blink_symbol_level = 0
          optimize_for_size = true
          treat_warnings_as_errors = false
          use_lld = false
          use_allocator = "none"

          enable_nacl = false
          enable_webrtc = false
          enable_print_preview = false
          enable_swiftshader = false
          enable_vulkan = false

          # Rust configuration
          enable_rust = true
          rust_sysroot = "$HOME/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"
          rustc_version = "$(rustc --version | cut -d' ' -f2)"
          rust_default_toolchain = "stable"
          rust_toolchain_target = "armv7-unknown-linux-gnueabihf"

          single_process = true
          GN

      - name: GN gen
        run: |
          cd build/src
          # Set Rust environment variables
          source ~/.cargo/env
          out/Default/gn gen out/Default --fail-on-unused-args

      - name: Build chrome (ARMhf)
        run: |
          cd build/src
          source $HOME/.cargo/env
          ninja -C out/Default chrome

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ungoogled-chromium-armhf-out-Default
          path: build/src/out/Default
